name: 'Set build skip-create'
description: >-
  Determine a build skip-create based on predetermined conditions.
  This action is used with Packer to determine the `skip_create*` variable for either Amazon EBS (`skip_create_ami`) or Google Cloud Platform (`skip_create_image`).
# Ref: https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
author: 'rwaight'
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#branding
branding:
  icon: 'info'
  color: 'blue'
  # Ref: https://haya14busa.github.io/github-action-brandings/
  # fork: https://github.com/rwaight/github-action-brandings

# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#inputs
inputs:
  # checkout:
  #   description: >-
  #     This is not used to set skip-create. 
  #     If the action should checkout the repo using `actions/checkout`, defaults to false.
  #   required: false
  #   default: 'false'
  create-image:
    description: >-
      User provided input used when determining skip-create, defaults to not creating an image (false).
      This is only evaluated if the 'github.event_name' is 'workflow_dispatch'.
    required: false
    default: 'false'
  event-name:
    description: 'This should be the github.event_name variable. '
    default: ${{ github.event_name }}
    required: false
  # gh-token:
  #   description: >-
  #     This is not used to set skip-create. 
  #     GITHUB_TOKEN or a `repo` scoped Personal Access Token (PAT), may be needed for the GitHub CLI.
  #   required: false
  #   default: ${{ github.token }}
  ref:
    description: 'This should be the github.ref variable. '
    default: ${{ github.ref }}
    required: false
  ref-name:
    description: 'This should be the github.ref_type variable. '
    default: ${{ github.ref_name }}
    required: false
  ref-type:
    description: 'This should be the github.ref_type variable. '
    default: ${{ github.ref_type }}
    required: false
  release-tag-name:
    description: 'This should be the github.ref_type variable. '
    default: ${{ github.event.release.tag_name }}
    required: false
  # strategy:
  #   description: >-
  #     This is reserved for future use, but currently not used to set skip-create. 
  #     The strategy to use when determining skip-create, either: `user-input` or `github-event`. '
  #   required: false
  #   default: 'github-event'
  workflow:
    description: 'This should be the github.workflow variable. '
    default: ${{ github.workflow }}
    required: false
  workflow-summary:
    description: 'Determine if the action should output to the GitHub summary (`$GITHUB_STEP_SUMMARY`), defaults to false. '
    required: false
    default: 'false'
  verbose:
    description: 'Determine if the action should run verbose tasks, defaults to false. '
    required: false
    default: 'false'

# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#outputs-for-composite-actions
outputs:
  image-skip-create:
    description: "The determine variable to be provided as the Packer `skip_create*` variable. "
    value: ${{ steps.set-skip-create-output.outputs.IMAGE_SKIP_CREATE }}

# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#runs-for-composite-actions
runs:
  using: "composite"
  steps:

    - name: Validate that the runner OS is Linux
      if: ${{ runner.os != 'Linux' }}
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-error-message
      shell: bash
      run: |
        echo "error in the action '${{ github.action }}' at file path: '${{ github.action_path }}' "
        echo "::error file=builders/set-skip-create/action.yml,title=â›” set-skip-create error hint::This action supports Linux only"
        exit 1

    - name: Greet the triggering_actor
      if: inputs.verbose=='true' || ${{ runner.debug == '1' }}
      shell: bash
      run: | 
        echo "Hello ${{ github.triggering_actor }}, the verbose variable is set to true."
        echo ""
        echo "Here is some information about this action: "
        echo "  action name  :  ${{ github.action }} "
        echo "  action path  :  ${{ github.action_path }} "
        echo "  action ref   :  ${{ github.action_ref }} "
        echo "  action repo  :  ${{ github.action_repository }} "
        echo "  action status:  ${{ github.action_status }} "
        echo ""

    - name: Show GitHub runner context
      if: inputs.verbose=='true' || ${{ runner.debug == '1' }}
      # to do:  run this if either the verbose input is true or the runner.debug is true
      id: show-runner-context
      ## The 'runner.*' and 'RUNNER_*' variables are not available in the WORKFLOW env context or the top-level JOB context, but are available in the STEP env context
      shell: bash
      env:
        EVAL_GH_VAR_RUNNER_DEBUG_EQ0: ${{ runner.debug == '0' }}
        EVAL_GH_VAR_RUNNER_DEBUG_EQ1: ${{ runner.debug == '1' }}
        FOOBAR: ${{ runner.debug == '1' && 'foo' || 'bar' }}
        # https://github.com/actions/runner/issues/2204#issuecomment-1287947031
        # https://github.com/orgs/community/discussions/27627#discussioncomment-3302259
        GH_RUNNER_LOG: "${{ runner.debug == '1' && 'INFO' || 'ERROR' }}"
        GH_VAR_RUNNER_DEBUG1: ${{ runner.debug }}
        GH_VAR_RUNNER_DEBUG2: ${{ env.RUNNER_DEBUG }}
        GH_VAR_RUNNER_OS1: ${{ runner.os }}
        GH_VAR_RUNNER_OS2: ${{ env.RUNNER_OS }}
        GH_VAR_RUNNER_ARCH1: ${{ runner.arch }}
        GH_VAR_RUNNER_ARCH2: ${{ env.RUNNER_ARCH }}
      run: |
        echo "::group::starting the 'show-runner-context' step... "
        echo ""
        echo "NOTE: The 'runner.*' and 'RUNNER_*' variables are not available in the WORKFLOW env context or the top-level JOB context, but are available in the STEP env context "
        echo ""
        echo "eval if the 'runner.debug' is set to either '0' or '1' "
        echo "     runner.debug equal 0:  ${EVAL_GH_VAR_RUNNER_DEBUG_EQ0} "
        echo "     runner.debug equal 1:  ${EVAL_GH_VAR_RUNNER_DEBUG_EQ1} "
        echo ""
        echo "set FOOBAR to 'foo' if 'runner.debug' is '1'; otherwise set FOOBAR to 'bar' "
        echo "    FOOBAR:  ${FOOBAR} "
        echo ""
        echo "set GH_RUNNER_LOG to 'INFO' if 'runner.debug' is '1'; otherwise set GH_RUNNER_LOG to 'ERROR' "
        echo "    GH_RUNNER_LOG:  ${GH_RUNNER_LOG} "
        echo ""
        echo "the values of 'runner.debug' and 'env.RUNNER_DEBUG': "
        echo "    GH_VAR_RUNNER_DEBUG1:  ${GH_VAR_RUNNER_DEBUG1} "
        echo "    GH_VAR_RUNNER_DEBUG2:  ${GH_VAR_RUNNER_DEBUG2} "
        echo ""
        echo "the values of 'runner.os' and 'env.RUNNER_OS': "
        echo "    GH_VAR_RUNNER_OS1:  ${GH_VAR_RUNNER_OS1} "
        echo "    GH_VAR_RUNNER_OS2:  ${GH_VAR_RUNNER_OS2} "
        echo ""
        echo "the values of 'runner.arch' and 'env.RUNNER_ARCH': "
        echo "    GH_VAR_RUNNER_ARCH1:  ${GH_VAR_RUNNER_ARCH1} "
        echo "    GH_VAR_RUNNER_ARCH2:  ${GH_VAR_RUNNER_ARCH2} "
        echo ""
        echo "finishing the 'show-runner-context' step... "
        ##
        echo "::endgroup::"
      ## The 'runner.*' and 'RUNNER_*' variables are not available in the WORKFLOW env context or the top-level JOB context, but are available in the STEP env context

    - name: Verbose | Print the inputs
      if: inputs.verbose=='true' || ${{ runner.debug == '1' }}
      id: verbose-print-inputs
      shell: bash
      run: | 
        echo "::group::starting the 'verbose-print-inputs' step... "
        ## Print the inputs if inputs.verbose=='true'
        ## the double number signs below are for line spacing and readability only
        ##
        echo ""
        echo "Here are the inputs provided to the action: "
        echo "    gh-token SHOULD BE MASKED, but is set to ${{ inputs.gh-token }} "
        echo "    checkout        :  ${{ inputs.checkout }} "
        echo "    event-name      :  ${{ inputs.event-name }} "
        echo "    ref             :  ${{ inputs.ref }} "
        echo "    ref-name        :  ${{ inputs.ref-name }} "
        echo "    ref-type        :  ${{ inputs.ref-type }} "
        echo "    release-tag-name:  ${{ inputs.release-tag-name }} "
        echo "    strategy        :  ${{ inputs.strategy }} "
        echo "    workflow        :  ${{ inputs.workflow }} "
        echo "    workflow-summary:  ${{ inputs.workflow-summary }} "
        echo "    verbose         :  ${{ inputs.verbose }} "
        echo ""
        echo "finishing the 'verbose-print-inputs' step... "
        ##
        echo "::endgroup::"

    - name: Verbose | Print GitHub Context
      if: inputs.verbose=='true' || ${{ runner.debug == '1' }}
      id: verbose-github-context
      shell: bash
      run: | 
        echo "::group::starting the 'verbose-github-context' step... "
        ## Print the inputs if inputs.verbose=='true'
        ## the double number signs below are for line spacing and readability only
        ##
        echo ""
        echo "GitHub context values: "
        echo "    event_name:  ${{ github.event_name }} "
        echo "    ref       :  ${{ github.ref }} "
        echo "    ref_name  :  ${{ github.ref_name }} "
        echo "    ref_type  :  ${{ github.ref_type }} "
        echo "    workflow  :  ${{ github.workflow }} "
        echo ""
        echo "GitHub event context values: "
        echo "    event.release.tag_name         :  ${{ github.event.release.tag_name }} "
        echo "    event.repository.default_branch:  ${{ github.event.repository.default_branch }} "
        echo ""
        echo "GitHub release event context values: "
        echo "    created_at:  ${{ github.event.release.created_at }} "
        echo "    draft     :  ${{ github.event.release.draft }} "
        echo "    id        :  ${{ github.event.release.id }} "
        echo "    name      :  ${{ github.event.release.name }} "
        echo "    tag_name  :  ${{ github.event.release.tag_name }} "
        echo "    prerelease:  ${{ github.event.release.prerelease }} "
        echo "    url       :  ${{ github.event.release.url }} "
        echo ""
        echo "finishing the 'verbose-github-context' step... "
        ##
        echo "::endgroup::"

    # #     This is not used to set skip-create.
    # - name: Checkout files from commit tree
    #   # Verified creator: https://github.com/marketplace/actions/checkout
    #   # GitHub Action for checking out a repo
    #   uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    #   id: checkout-without-token
    #   if: inputs.checkout=='true'
    #   continue-on-error: true
    #   with:
    #     fetch-depth: 0

    # #     This is not used to set skip-create.
    # - name: Checkout files from commit tree with the token
    #   # Verified creator: https://github.com/marketplace/actions/checkout
    #   # GitHub Action for checking out a repo
    #   uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    #   id: checkout-with-token
    #   if: steps.checkout-without-token.outcome == 'failure'
    #   with:
    #     fetch-depth: 0
    #     token: ${{ inputs.gh-token }}

    - name: Extra | The ref_type is 'tag'
      id: extra-ref-type-tag
      if: github.ref_type == 'tag'
      shell: bash
      run: |
        echo "::group::starting the 'extra-ref-type-tag' step... "
        echo "The ref_type is 'tag' "
        ##echo ""
        echo "    ref     :  ${{ github.ref }} "
        echo "    ref_name:  ${{ github.ref_name }} "
        echo "    ref_type:  ${{ github.ref_type }} "
        echo ""
        echo "The release information is: "
        echo "    release.tag_name:  ${{ github.event.release.tag_name }}"
        echo ""
        echo "finishing the 'extra-ref-type-tag' step... "
        ##
        echo "::endgroup::"

    - name: Extra | The tag starts with the proper version numbering syntax
      id: extra-tag-with-version-syntax
      if: github.ref_type == 'tag' && startsWith('refs/tags/v[0-9].[0-9].[0-9]', github.ref)
      # the filter pattern will need to be updated to allow double digits, using either: 
      #    specify 2 digits with a second range followed by `?`:
      #        'v[0-9][0-9]?.[0-9][0-9]?.[0-9][0-9]?'     
      #    or keep the single digit, but match one or more with `+`:
      #        'v[0-9]+.[0-9]+.[0-9]+'
      # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
      shell: bash
      run: |
        echo "::group::starting the 'extra-tag-with-version-syntax' step... "
        echo "The ref_type is 'tag' and the tag starts with the proper version numbering syntax "
        ##echo ""
        echo "    ref     :  ${{ github.ref }} "
        echo "    ref_name:  ${{ github.ref_name }} "
        echo "    ref_type:  ${{ github.ref_type }} "
        echo ""
        echo "The release information is: "
        echo "    release.tag_name:  ${{ github.event.release.tag_name }}"
        echo ""
        echo "finishing the 'extra-tag-with-version-syntax' step... "
        ##
        echo "::endgroup::"

    - name: Set environmental variables used to evaluate the build skip-create
      id: set-eval-skip-create-env-vars
      # Ensure that the needed environmental variables are set
      #   - 'EVAL_SKIP_CREATE' is set to 'false'
      #   - 'EVAL_REASON' is set to 'tbd'
      #   - 'IMAGE_SKIP_NOTE' is set to 'tbd'
      #   - 'IMAGE_SKIP_REASON' is set to 'tbd'
      #   - 'GH_DEFAULT_BRANCH' is set to '${{ github.event.repository.default_branch }}'
      if: ${{ always() }}
      shell: bash
      run: |
        echo "::group::starting the 'set-eval-skip-create-env-vars' step... "
        echo ""
        echo "Setting EVAL_SKIP_CREATE to false..."
        echo "EVAL_SKIP_CREATE=false" >> $GITHUB_ENV
        echo ""
        EVAL_REASON=tbd
        echo "Setting EVAL_REASON to '${EVAL_REASON}' ..."
        echo "EVAL_REASON=${EVAL_REASON}" >> $GITHUB_ENV
        echo ""
        IMAGE_SKIP_NOTE=tbd
        echo "Setting IMAGE_SKIP_NOTE to '${IMAGE_SKIP_NOTE}' ..."
        echo "IMAGE_SKIP_NOTE=${IMAGE_SKIP_NOTE}" >> $GITHUB_ENV
        echo ""
        IMAGE_SKIP_REASON=tbd
        echo "Setting IMAGE_SKIP_REASON to '${IMAGE_SKIP_REASON}' ..."
        echo "IMAGE_SKIP_REASON=${IMAGE_SKIP_REASON}" >> $GITHUB_ENV
        echo ""
        echo "Setting GH_DEFAULT_BRANCH to '${{ github.event.repository.default_branch }}'..."
        echo "GH_DEFAULT_BRANCH=${{ github.event.repository.default_branch }}" >> $GITHUB_ENV
        echo ""
        echo "finishing the 'set-eval-skip-create-env-vars' step... "
        echo "::endgroup::"

    - name: get-tag-version
      id: get-tag-version
      if: (github.ref_type == 'tag')
      shell: bash
      run: |
        echo "::group::starting step 'get-tag-version' "
        echo ""
        VERSION="${{ github.event.release.tag_name || github.ref_name }}"
        ##
        RE='^[vV]?([0-9]+)[.]([0-9]+)[.]([0-9]+)(-[0-9A-Za-z.+-]*)?'
        if [[ $VERSION =~ $RE ]]; then
            MAJOR="${BASH_REMATCH[1]}"
            MINOR="${BASH_REMATCH[2]}"
            PATCH="${BASH_REMATCH[3]}"
            PRERELEASE="${BASH_REMATCH[4]}"
            if [ '${{ inputs.VERBOSE }}' == 'true' ]; then
                echo "VERSION is: $VERSION "
                echo "RE is     : $RE "
                echo "MAJOR is  : $MAJOR "
                echo "MINOR is  : $MINOR "
                echo "PATCH is  : $PATCH "
                echo "PRERELEASE: $PRERELEASE "
            fi
        else
            echo "::error file=builders/set-skip-create/action.yml,title=â›” set-version error hint::Version '$VERSION' is not in a valid format, see the 'get-tag-version' step output."
            exit 1
        fi
        ##
        if [[ "$PRERELEASE" ]]; then pre=true; else pre=false; fi
        ##
        ##echo "full-version-tag=$VERSION" >> $GITHUB_OUTPUT
        ##echo "full-version-ref=v$MAJOR.$MINOR.$PATCH" >> $GITHUB_OUTPUT
        echo "full-version-ref=$VERSION" >> $GITHUB_OUTPUT
        echo "major-ref=v$MAJOR" >> $GITHUB_OUTPUT
        echo "minor-ref=v$MINOR" >> $GITHUB_OUTPUT
        echo "patch-ref=v$PATCH" >> $GITHUB_OUTPUT
        echo "is-prerelease=$pre" >> $GITHUB_OUTPUT
        echo ""
        echo "completing the 'get-tag-version' step. "
        echo "::endgroup::"

    - name: get-tag-version | Print outputs
      id: check-get-tag-version
      #if: (github.ref_type == 'tag')
      if: ${{ steps.get-tag-version.outputs.full-version-ref }}
      shell: bash
      run: |
        echo "::group::starting step 'check-get-tag-version' "
        echo ""
        echo "## get-tag-version outputs"
        echo "Full version: ${{ env.FULL_VERSION_REF }} "
        echo "Major ref   : ${{ env.MAJOR_REF }} "
        echo "Minor ref   : ${{ env.MINOR_REF }} "
        echo "Patch ref   : ${{ env.PATCH_REF }} "
        echo "Prerelease  : ${{ env.IS_PRERELEASE }}"
        echo ""
        echo "completing the 'check-get-tag-version' step. "
        echo "::endgroup::"
      env:
        #FULL_VERSION_TAG: ${{ steps.get-tag-version.outputs.full-version-tag }}
        FULL_VERSION_REF: ${{ steps.get-tag-version.outputs.full-version-ref }}
        MAJOR_REF: ${{ steps.get-tag-version.outputs.major-ref }}
        MINOR_REF: ${{ steps.get-tag-version.outputs.minor-ref }}
        PATCH_REF: ${{ steps.get-tag-version.outputs.patch-ref }}
        IS_PRERELEASE: ${{ steps.get-tag-version.outputs.is-prerelease }}

    - name: IMAGE_SKIP_CREATE | Enable image creation for a full version tag
      #name: IMAGE_SKIP_CREATE | Enable image creation for creating (push) a 'v*.*.*' tag
      id: set-eval-skip-create-full-version-tag
      # Create an image when we create (push) a 'v*.*.*' tag and the github.ref_type is 'tag'
      # See https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      #using 'v*.*.*' does not work#was#if: ${{ contains('refs/tags/v*.*.*', github.ref) && (github.ref_type == 'tag') && (github.event_name=='push') }}
      #using 'v*.*.*' does not work#if: (contains('refs/tags/v*.*.*', github.ref) && github.ref_type == 'tag' && github.event_name=='push')
      if: ${{ steps.get-tag-version.outputs.full-version-ref }}
      shell: bash
      run: |
        echo "::group::starting step 'set-eval-skip-create-full-version-tag' "
        echo ""
        echo "EVAL_SKIP_CREATE is    : ${{ env.EVAL_SKIP_CREATE }} "
        echo ""
        echo "Event name:  ${{ github.event_name }} "
        echo "Ref       :  ${{ github.ref }}"
        echo "Ref name  :  ${{ github.ref_name }} "
        echo "Ref type  :  ${{ github.ref_type }} "
        echo ""
        echo "release tag_name: ${{ github.event.release.tag_name }}"
        echo ""
        echo "## get-tag-version outputs"
        echo "Full version: ${{ env.FULL_VERSION_REF }} "
        echo ""
        if [[ '${{ github.event_name }}' == 'push' ]]; then
            echo "the 'github.event_name' is 'push' ... "
            ##
            echo "Enabling image creation based on the above conditions being met."
            echo "Setting IMAGE_SKIP_CREATE to false..."
            echo "IMAGE_SKIP_CREATE=false" >> $GITHUB_ENV
            echo "IMAGE_SKIP_NOTE=Build image" >> $GITHUB_ENV
            ##
            echo "Setting EVAL_SKIP_CREATE to true..."
            EVAL_SKIP_CREATE=true
            echo "EVAL_SKIP_CREATE=true" >> $GITHUB_ENV
            ##
            echo "The EVAL_SKIP_CREATE parameter has been set to ${EVAL_SKIP_CREATE}"
            echo "IMAGE_SKIP_REASON=Build image: ${{ github.event_name }} with ref: ${{ github.ref }}, ref_type: ${{ github.ref_type }}" >> $GITHUB_ENV
        elif [[ '${{ github.event_name }}' != 'push' ]]; then
            echo "the 'github.event_name' is NOT 'push' ... "
            ##
            echo "Enabling image creation based on the above conditions being met."
            echo "Setting IMAGE_SKIP_CREATE to false..."
            echo "IMAGE_SKIP_CREATE=false" >> $GITHUB_ENV
            echo "IMAGE_SKIP_NOTE=Build image" >> $GITHUB_ENV
            ##
            echo "Setting EVAL_SKIP_CREATE to true..."
            EVAL_SKIP_CREATE=true
            echo "EVAL_SKIP_CREATE=true" >> $GITHUB_ENV
            ##
            echo "The EVAL_SKIP_CREATE parameter has been set to ${EVAL_SKIP_CREATE}"
            echo "IMAGE_SKIP_REASON=Build image: ${{ github.event_name }} with ref: ${{ github.ref }}, ref_type: ${{ github.ref_type }}" >> $GITHUB_ENV
        else
            echo "something strange is happening, not changing anything... "
        fi
        echo ""
        echo "completing the 'set-eval-skip-create-full-version-tag' step. "
        echo "::endgroup::"
      env:
        FULL_VERSION_REF: ${{ steps.get-tag-version.outputs.full-version-ref }}

    - name: IMAGE_SKIP_CREATE | Skip image creation for manual workflow runs
      id: set-eval-skip-create-manual-skip
      # Manual builds where the 'Create an image from build' option is NOT checked
      if: (github.event_name=='workflow_dispatch' && inputs.IMAGE_CREATE=='false' && env.EVAL_SKIP_CREATE=='false')
      #try-next#if: env.EVAL_SKIP_CREATE=='false' && (github.event_name=='workflow_dispatch' && inputs.IMAGE_CREATE=='false')
      shell: bash
      run: |
        echo "::group::starting step 'set-eval-skip-create-manual-skip' "
        echo ""
        echo "EVAL_SKIP_CREATE is    : ${{ env.EVAL_SKIP_CREATE }} "
        echo "The GitHub event_name is: ${{ github.event_name }}"
        echo "The GitHub ref is       : ${{ github.ref }}"
        echo "The GitHub ref_name is  : ${{ github.ref_name }}"
        echo "The GitHub ref_type is  : ${{ github.ref_type }}"
        echo ""
        echo "Skipping image creation based on the above conditions being met."
        echo "Setting IMAGE_SKIP_CREATE to true..."
        echo "IMAGE_SKIP_CREATE=true" >> $GITHUB_ENV
        echo "IMAGE_SKIP_NOTE=Skip image" >> $GITHUB_ENV
        echo "Setting EVAL_SKIP_CREATE to true..."
        EVAL_SKIP_CREATE=true
        echo "EVAL_SKIP_CREATE=true" >> $GITHUB_ENV
        echo "The EVAL_SKIP_CREATE parameter has been set to ${EVAL_SKIP_CREATE}"
        echo "IMAGE_SKIP_REASON=Skip image: ${{ github.event_name }}, image_create input: ${{ inputs.IMAGE_CREATE }}" >> $GITHUB_ENV
        echo ""
        echo "completing the 'set-eval-skip-create-manual-skip' step. "
        echo "::endgroup::"

    - name: IMAGE_SKIP_CREATE | Enable image creation for manual workflow runs
      id: set-eval-skip-create-manual-create
      # Manual builds where the 'Create an image from build' option is checked
      if: (github.event_name=='workflow_dispatch' && inputs.IMAGE_CREATE=='true' && env.EVAL_SKIP_CREATE=='false')
      #try-next#if: env.EVAL_SKIP_CREATE=='false' && (github.event_name=='workflow_dispatch' && inputs.IMAGE_CREATE=='true')
      shell: bash
      run: |
        echo "::group::starting step 'set-eval-skip-create-manual-create' "
        echo ""
        echo "EVAL_SKIP_CREATE is    : ${{ env.EVAL_SKIP_CREATE }} "
        echo "The GitHub event_name is: ${{ github.event_name }}"
        echo "The GitHub ref is       : ${{ github.ref }}"
        echo "The GitHub ref_name is  : ${{ github.ref_name }}"
        echo "The GitHub ref_type is  : ${{ github.ref_type }}"
        echo ""
        echo "Enabling image creation based on the above conditions being met."
        echo "Setting IMAGE_SKIP_CREATE to false..."
        echo "IMAGE_SKIP_CREATE=false" >> $GITHUB_ENV
        echo "IMAGE_SKIP_NOTE=Build image" >> $GITHUB_ENV
        echo "Setting EVAL_SKIP_CREATE to true..."
        EVAL_SKIP_CREATE=true
        echo "EVAL_SKIP_CREATE=true" >> $GITHUB_ENV
        echo "The EVAL_SKIP_CREATE parameter has been set to ${EVAL_SKIP_CREATE}"
        echo "IMAGE_SKIP_REASON=Build image: ${{ github.event_name }}, image_create input: ${{ inputs.IMAGE_CREATE }}" >> $GITHUB_ENV
        echo ""
        echo "completing the 'set-eval-skip-create-manual-create' step. "
        echo "::endgroup::"

    - name: IMAGE_SKIP_CREATE | Skip image creation for scheduled workflow run at ${{ github.event.schedule }}
      id: set-eval-skip-create-scheduled
      # Do not build an image when the workflow runs on the schedule declared above
      if: (github.event_name=='schedule' && github.event.schedule==env.BUILD_SCHEDULE && env.EVAL_SKIP_CREATE=='false')
      #try-next#if: env.EVAL_SKIP_CREATE=='false' && (github.event_name=='schedule' && github.event.schedule==env.BUILD_SCHEDULE)
      shell: bash
      run: |
        echo "::group::starting step 'set-eval-skip-create-scheduled' "
        echo ""
        echo "EVAL_SKIP_CREATE is    : ${{ env.EVAL_SKIP_CREATE }} "
        echo "The GitHub event_name is: ${{ github.event_name }}"
        echo "The GitHub ref is       : ${{ github.ref }}"
        echo "The GitHub ref_name is  : ${{ github.ref_name }}"
        echo "The GitHub ref_type is  : ${{ github.ref_type }}"
        echo ""
        echo "Skipping image creation based on the above conditions being met."
        echo "Setting IMAGE_SKIP_CREATE to true..."
        echo "IMAGE_SKIP_CREATE=true" >> $GITHUB_ENV
        echo "IMAGE_SKIP_NOTE=Skip image" >> $GITHUB_ENV
        echo "Setting EVAL_SKIP_CREATE to true..."
        EVAL_SKIP_CREATE=true
        echo "EVAL_SKIP_CREATE=true" >> $GITHUB_ENV
        echo "The EVAL_SKIP_CREATE parameter has been set to ${EVAL_SKIP_CREATE}"
        echo "IMAGE_SKIP_REASON=Skip image: ${{ github.event_name }} at ${{ github.event.schedule }}" >> $GITHUB_ENV
        echo ""
        echo "completing the 'set-eval-skip-create-scheduled' step. "
        echo "::endgroup::"

    - name: IMAGE_SKIP_CREATE | Skip image creation for pull requests
      id: set-eval-skip-create-pull-request
      # Do not create an image when a pull request has been opened
      if: (github.event_name=='pull_request' && env.EVAL_SKIP_CREATE=='false')
      shell: bash
      run: |
        echo "::group::starting step 'set-eval-skip-create-pull-request' "
        echo ""
        echo "EVAL_SKIP_CREATE is    : ${{ env.EVAL_SKIP_CREATE }} "
        echo "The GitHub event_name is: ${{ github.event_name }}"
        echo "The GitHub ref is       : ${{ github.ref }}"
        echo "The GitHub ref_name is  : ${{ github.ref_name }}"
        echo "The GitHub ref_type is  : ${{ github.ref_type }}"
        echo ""
        echo "Skipping image creation based on the above conditions being met."
        echo "Setting IMAGE_SKIP_CREATE to true..."
        echo "IMAGE_SKIP_CREATE=true" >> $GITHUB_ENV
        echo "IMAGE_SKIP_NOTE=Skip image" >> $GITHUB_ENV
        echo "Setting EVAL_SKIP_CREATE to true..."
        EVAL_SKIP_CREATE=true
        echo "EVAL_SKIP_CREATE=true" >> $GITHUB_ENV
        echo "The EVAL_SKIP_CREATE parameter has been set to ${EVAL_SKIP_CREATE}"
        echo "IMAGE_SKIP_REASON=Skip image: ${{ github.event_name }}" >> $GITHUB_ENV
        echo ""
        if [[ "${{ inputs.workflow-summary }}" == "true" ]]; then
            echo "**NOTE**: You must manually run the build to create an image for a pull request." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
        else
            echo "**NOTE**: You must manually run the build to create an image for a pull request."
            echo ""
            echo "  this is not being sent to the workflow summary, since 'inputs.workflow-summary' is not set to 'true'."
        fi
        echo ""
        echo "completing the 'set-eval-skip-create-pull-request' step. "
        echo "::endgroup::"

    - name: IMAGE_SKIP_CREATE | Skip image creation for push (commit) to main
      id: set-eval-skip-create-push-to-main
      # Do not create an image when we push (commit) to main (from a pull request) and the github.ref is 'refs/heads/main'
      # See https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      shell: bash
      if: |
        (github.event_name=='push' && github.ref == 'refs/heads/main' && env.EVAL_SKIP_CREATE=='false') || 
        (github.event_name=='push' && startsWith(github.ref_name, 'main') && env.EVAL_SKIP_CREATE=='false')
      # need to use the below conditional for branches with multiple major versions
      #if: (github.event_name=='push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/main-2.x'))
      run: |
        echo "::group::starting step 'set-eval-skip-create-push-to-main' "
        echo ""
        echo "EVAL_SKIP_CREATE is    : ${{ env.EVAL_SKIP_CREATE }} "
        echo "The GitHub event_name is: ${{ github.event_name }}"
        echo "The GitHub ref is       : ${{ github.ref }}"
        echo "The GitHub ref_name is  : ${{ github.ref_name }}"
        echo "The GitHub ref_type is  : ${{ github.ref_type }}"
        echo ""
        echo "Skipping image creation based on the above conditions being met."
        echo "IMAGE_SKIP_CREATE=true" >> $GITHUB_ENV
        echo "IMAGE_SKIP_NOTE=Skip image" >> $GITHUB_ENV
        echo "Setting EVAL_SKIP_CREATE to true..."
        EVAL_SKIP_CREATE=true
        echo "EVAL_SKIP_CREATE=true" >> $GITHUB_ENV
        echo "The EVAL_SKIP_CREATE parameter has been set to ${EVAL_SKIP_CREATE}"
        echo "IMAGE_SKIP_REASON=Skip image: ${{ github.event_name }} with ref: ${{ github.ref }}" >> $GITHUB_ENV
        echo ""
        echo "completing the 'set-eval-skip-create-push-to-main' step. "
        echo "::endgroup::"

    - name: IMAGE_SKIP_CREATE | Skip image creation for push (commit) to default
      id: set-eval-skip-create-push-to-default
      # Do not create an image when we push (commit) to main (from a pull request) and the github.ref is 'refs/heads/main'
      # See https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      #was#if: |
      #was#  (github.event_name=='push' && github.ref == 'refs/heads/${{ env.GH_DEFAULT_BRANCH }}' && env.EVAL_SKIP_CREATE=='false') ||
      #was#  (github.event_name=='push' && github.ref_name == '${{ env.GH_DEFAULT_BRANCH }}' && env.EVAL_SKIP_CREATE=='false')
      if: | 
        ${{ env.EVAL_SKIP_CREATE=='false' }} &&
        ${{ (github.event_name=='push' && github.ref_name=='${{ github.event.repository.default_branch }}') }}
      # need to use the below conditional for branches with multiple major versions
      #if: (github.event_name=='push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/main-2.x'))
      ## https://stackoverflow.com/questions/68928595/strange-boolean-evaluation-in-github-actions
      ## https://github.com/actions/runner/issues/1173
      shell: bash
      run: |
        echo "::group::starting step 'set-eval-skip-create-push-to-default' "
        echo ""
        echo "EVAL_SKIP_CREATE is    : ${{ env.EVAL_SKIP_CREATE }} "
        echo "The GitHub event_name is: ${{ github.event_name }}"
        echo "The GitHub ref is       : ${{ github.ref }}"
        echo "The GitHub ref_name is  : ${{ github.ref_name }}"
        echo "The GitHub ref_type is  : ${{ github.ref_type }}"
        echo ""
        if [[ "${{ env.EVAL_SKIP_CREATE }}" == "true" ]]; then
            echo "nested conditional, EVAL_SKIP_CREATE must be true ... "
            echo "the true is in double quotes... "
            echo "nothing to do, need to find out why this step ran   ... "
        elif [[ '${{ env.EVAL_SKIP_CREATE }}' == 'true' ]]; then
            echo "nested conditional, EVAL_SKIP_CREATE must be true ... "
            echo "the true is in single quotes... "
            echo "nothing to do, need to find out why this step ran   ... "
        else
            echo "nested conditional, else statement"
            echo "EVAL_SKIP_CREATE is    : ${{ env.EVAL_SKIP_CREATE }} "
            echo ""
            echo "Skipping image creation based on the above conditions being met."
            echo "Setting IMAGE_SKIP_CREATE to true..."
            echo "IMAGE_SKIP_CREATE=true" >> $GITHUB_ENV
            echo "IMAGE_SKIP_NOTE=Skip image" >> $GITHUB_ENV
            echo "Setting EVAL_SKIP_CREATE to true..."
            EVAL_SKIP_CREATE=true
            echo "EVAL_SKIP_CREATE=true" >> $GITHUB_ENV
            echo "The EVAL_SKIP_CREATE parameter has been set to ${EVAL_SKIP_CREATE}"
            echo "IMAGE_SKIP_REASON=Skip image: ${{ github.event_name }} with ref: ${{ github.ref }}" >> $GITHUB_ENV
            echo ""
        fi
        ##
        echo ""
        echo "completing the 'set-eval-skip-create-push-to-default' step. "
        echo "::endgroup::"

    - name: IMAGE_SKIP_CREATE | Fallback value - Skip image creation for other events
      id: set-eval-skip-create-fallback
      # If this runs, then that means the previous steps were skipped
      if: env.EVAL_SKIP_CREATE=='false'
      shell: bash
      run: |
        echo "::group::starting step 'set-eval-skip-create-fallback' "
        echo ""
        echo "EVAL_SKIP_CREATE is    : ${{ env.EVAL_SKIP_CREATE }} "
        echo "The GitHub event_name is: ${{ github.event_name }}"
        echo "The GitHub ref is       : ${{ github.ref }}"
        echo "The GitHub ref_name is  : ${{ github.ref_name }}"
        echo "The GitHub ref_type is  : ${{ github.ref_type }}"
        echo ""
        echo "Skipping image creation as the previous conditions were not met."
        echo "Setting IMAGE_SKIP_CREATE to true..."
        echo "IMAGE_SKIP_CREATE=true" >> $GITHUB_ENV
        echo "IMAGE_SKIP_NOTE=Skip image" >> $GITHUB_ENV
        echo "Setting EVAL_SKIP_CREATE to true..."
        EVAL_SKIP_CREATE=true
        echo "EVAL_SKIP_CREATE=true" >> $GITHUB_ENV
        echo "The EVAL_SKIP_CREATE parameter has been set to ${EVAL_SKIP_CREATE}"
        echo "IMAGE_SKIP_REASON=Skip image: ${{ github.event_name }}, fallback value" >> $GITHUB_ENV
        echo ""
        echo ""
        if [[ "${{ inputs.workflow-summary }}" == "true" ]]; then
            echo "**NOTE**: IMAGE_SKIP_CREATE was set to the fallback value." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
        else
            echo "**NOTE**: IMAGE_SKIP_CREATE was set to the fallback value."
            echo ""
            echo "  this is not being sent to the workflow summary, since 'inputs.workflow-summary' is not set to 'true'."
        fi
        echo ""
        echo "completing the 'set-eval-skip-create-fallback' step. "
        echo "::endgroup::"

    - name: Error if the image skip create variable was not set
      id: set-eval-skip-create-error
      if: ${{ env.IMAGE_SKIP_CREATE == '' }}
      shell: bash
      run: |
        echo "The image skip create variable was not set. "
        echo "This workflow will now fail and exit. "
        echo "::error title=â›” error in the '${{ github.workflow }}' workflow hint::Image skip create variable not set correctly "
        exit 1
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-error-message

    - name: Output the image skip create results
      # Output the image skip create results
      id: set-skip-create-output
      shell: bash
      run: |
        echo "::group::starting step 'set-skip-create-output' "
        echo ""
        echo "IMAGE_SKIP_CREATE has been set to '${{ env.IMAGE_SKIP_CREATE }}' ... "
        echo "IMAGE_SKIP_CREATE=${{ env.IMAGE_SKIP_CREATE }}" >> "$GITHUB_OUTPUT"
        echo "IMAGE_SKIP_NOTE has been set to '${{ env.IMAGE_SKIP_NOTE }}' ... "
        echo "IMAGE_SKIP_NOTE=${{ env.IMAGE_SKIP_NOTE }}" >> "$GITHUB_OUTPUT"
        echo "IMAGE_SKIP_REASON has been set to '${{ env.IMAGE_SKIP_REASON }}' ... "
        echo "IMAGE_SKIP_REASON=${{ env.IMAGE_SKIP_REASON }}" >> "$GITHUB_OUTPUT"
        echo ""
        echo "completing the 'set-skip-create-output' step. "
        echo "::endgroup::"
