name: 'Set build skip-create'
description: 'Determine a build skip-create based on predetermined conditions.'
# Ref: https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
author: 'rwaight'
# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#branding
branding:
  icon: 'info'
  color: 'blue'
  # Ref: https://haya14busa.github.io/github-action-brandings/
  # fork: https://github.com/rwaight/github-action-brandings

# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#inputs
inputs:
  checkout:
    description: 'If the action should checkout the repo using `actions/checkout`, defaults to false. '
    required: false
    default: 'false'
  event-name:
    description: 'This should be the github.event_name variable. '
    default: ${{ github.event_name }}
    required: false
  gh-token:
    description: 'GITHUB_TOKEN or a `repo` scoped Personal Access Token (PAT), may be needed for the GitHub CLI. '
    required: false
    default: ${{ github.token }}
  ref:
    description: 'This should be the github.ref variable. '
    default: ${{ github.ref }}
    required: false
  ref-name:
    description: 'This should be the github.ref_type variable. '
    default: ${{ github.ref_name }}
    required: false
  ref-type:
    description: 'This should be the github.ref_type variable. '
    default: ${{ github.ref_type }}
    required: false
  release-tag-name:
    description: 'This should be the github.ref_type variable. '
    default: ${{ github.event.release.tag_name }}
    required: false
  # strategy:
  #   description: >-
  #     This is not used to set skip-create. 
  #     The strategy to use when calculating skip-create, either: `github-event` or `github-event`. '
  #   required: false
  #   default: 'github-event'
  workflow:
    description: 'This should be the github.workflow variable. '
    default: ${{ github.workflow }}
    required: false
  workflow-summary:
    description: 'Determine if the action should output to the GitHub summary (`$GITHUB_STEP_SUMMARY`), defaults to false. '
    required: false
    default: 'false'
  verbose:
    description: 'Determine if the action should run verbose tasks, defaults to false. '
    required: false
    default: 'false'

# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#outputs-for-composite-actions
outputs:
  build-skip-create:
    description: "The determined build skip-create. "
    value: ${{ steps.set-skip-create-output.outputs.BUILD_SKIP_CREATE }}

# https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions#runs-for-composite-actions
runs:
  using: "composite"
  steps:

    - name: Validate that the runner OS is Linux
      if: ${{ runner.os != 'Linux' }}
      # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-error-message
      shell: bash
      run: |
        echo "error in the action '${{ github.action }}' at file path: '${{ github.action_path }}' "
        echo "::error file=builders/set-skip-create/action.yml,title=â›” set-skip-create error hint::This action supports Linux only"
        exit 1

    - name: Greet the triggering_actor
      if: inputs.verbose=='true' || ${{ runner.debug == '1' }}
      shell: bash
      run: | 
        echo "Hello ${{ github.triggering_actor }}, the verbose variable is set to true."
        echo ""
        echo "Here is some information about this action: "
        echo "  action name  :  ${{ github.action }} "
        echo "  action path  :  ${{ github.action_path }} "
        echo "  action ref   :  ${{ github.action_ref }} "
        echo "  action repo  :  ${{ github.action_repository }} "
        echo "  action status:  ${{ github.action_status }} "
        echo ""

    - name: Show GitHub runner context
      if: inputs.verbose=='true' || ${{ runner.debug == '1' }}
      # to do:  run this if either the verbose input is true or the runner.debug is true
      id: show-runner-context
      ## The 'runner.*' and 'RUNNER_*' variables are not available in the WORKFLOW env context or the top-level JOB context, but are available in the STEP env context
      shell: bash
      env:
        EVAL_GH_VAR_RUNNER_DEBUG_EQ0: ${{ runner.debug == '0' }}
        EVAL_GH_VAR_RUNNER_DEBUG_EQ1: ${{ runner.debug == '1' }}
        FOOBAR: ${{ runner.debug == '1' && 'foo' || 'bar' }}
        # https://github.com/actions/runner/issues/2204#issuecomment-1287947031
        # https://github.com/orgs/community/discussions/27627#discussioncomment-3302259
        GH_RUNNER_LOG: "${{ runner.debug == '1' && 'INFO' || 'ERROR' }}"
        GH_VAR_RUNNER_DEBUG1: ${{ runner.debug }}
        GH_VAR_RUNNER_DEBUG2: ${{ env.RUNNER_DEBUG }}
        GH_VAR_RUNNER_OS1: ${{ runner.os }}
        GH_VAR_RUNNER_OS2: ${{ env.RUNNER_OS }}
        GH_VAR_RUNNER_ARCH1: ${{ runner.arch }}
        GH_VAR_RUNNER_ARCH2: ${{ env.RUNNER_ARCH }}
      run: |
        echo "::group::starting the 'show-runner-context' step... "
        echo ""
        echo "NOTE: The 'runner.*' and 'RUNNER_*' variables are not available in the WORKFLOW env context or the top-level JOB context, but are available in the STEP env context "
        echo ""
        echo "eval if the 'runner.debug' is set to either '0' or '1' "
        echo "     runner.debug equal 0:  ${EVAL_GH_VAR_RUNNER_DEBUG_EQ0} "
        echo "     runner.debug equal 1:  ${EVAL_GH_VAR_RUNNER_DEBUG_EQ1} "
        echo ""
        echo "set FOOBAR to 'foo' if 'runner.debug' is '1'; otherwise set FOOBAR to 'bar' "
        echo "    FOOBAR:  ${FOOBAR} "
        echo ""
        echo "set GH_RUNNER_LOG to 'INFO' if 'runner.debug' is '1'; otherwise set GH_RUNNER_LOG to 'ERROR' "
        echo "    GH_RUNNER_LOG:  ${GH_RUNNER_LOG} "
        echo ""
        echo "the values of 'runner.debug' and 'env.RUNNER_DEBUG': "
        echo "    GH_VAR_RUNNER_DEBUG1:  ${GH_VAR_RUNNER_DEBUG1} "
        echo "    GH_VAR_RUNNER_DEBUG2:  ${GH_VAR_RUNNER_DEBUG2} "
        echo ""
        echo "the values of 'runner.os' and 'env.RUNNER_OS': "
        echo "    GH_VAR_RUNNER_OS1:  ${GH_VAR_RUNNER_OS1} "
        echo "    GH_VAR_RUNNER_OS2:  ${GH_VAR_RUNNER_OS2} "
        echo ""
        echo "the values of 'runner.arch' and 'env.RUNNER_ARCH': "
        echo "    GH_VAR_RUNNER_ARCH1:  ${GH_VAR_RUNNER_ARCH1} "
        echo "    GH_VAR_RUNNER_ARCH2:  ${GH_VAR_RUNNER_ARCH2} "
        echo ""
        echo "finishing the 'show-runner-context' step... "
        ##
        echo "::endgroup::"
      ## The 'runner.*' and 'RUNNER_*' variables are not available in the WORKFLOW env context or the top-level JOB context, but are available in the STEP env context

    - name: Verbose | Print the inputs
      if: inputs.verbose=='true' || ${{ runner.debug == '1' }}
      id: verbose-print-inputs
      shell: bash
      run: | 
        echo "::group::starting the 'verbose-print-inputs' step... "
        ## Print the inputs if inputs.verbose=='true'
        ## the double number signs below are for line spacing and readability only
        ##
        echo ""
        echo "Here are the inputs provided to the action: "
        echo "    gh-token SHOULD BE MASKED, but is set to ${{ inputs.gh-token }} "
        echo "    checkout        :  ${{ inputs.checkout }} "
        echo "    event-name      :  ${{ inputs.event-name }} "
        echo "    ref             :  ${{ inputs.ref }} "
        echo "    ref-name        :  ${{ inputs.ref-name }} "
        echo "    ref-type        :  ${{ inputs.ref-type }} "
        echo "    release-tag-name:  ${{ inputs.release-tag-name }} "
        echo "    strategy        :  ${{ inputs.strategy }} "
        echo "    workflow        :  ${{ inputs.workflow }} "
        echo "    workflow-summary:  ${{ inputs.workflow-summary }} "
        echo "    verbose         :  ${{ inputs.verbose }} "
        echo ""
        echo "finishing the 'verbose-print-inputs' step... "
        ##
        echo "::endgroup::"

    - name: Verbose | Print GitHub Context
      if: inputs.verbose=='true' || ${{ runner.debug == '1' }}
      id: verbose-github-context
      shell: bash
      run: | 
        echo "::group::starting the 'verbose-github-context' step... "
        ## Print the inputs if inputs.verbose=='true'
        ## the double number signs below are for line spacing and readability only
        ##
        echo ""
        echo "GitHub context values: "
        echo "    event_name:  ${{ github.event_name }} "
        echo "    ref       :  ${{ github.ref }} "
        echo "    ref_name  :  ${{ github.ref_name }} "
        echo "    ref_type  :  ${{ github.ref_type }} "
        echo "    workflow  :  ${{ github.workflow }} "
        echo ""
        echo "GitHub event context values: "
        echo "    event.release.tag_name         :  ${{ github.event.release.tag_name }} "
        echo "    event.repository.default_branch:  ${{ github.event.repository.default_branch }} "
        echo ""
        echo "GitHub release event context values: "
        echo "    created_at:  ${{ github.event.release.created_at }} "
        echo "    draft     :  ${{ github.event.release.draft }} "
        echo "    id        :  ${{ github.event.release.id }} "
        echo "    name      :  ${{ github.event.release.name }} "
        echo "    tag_name  :  ${{ github.event.release.tag_name }} "
        echo "    prerelease:  ${{ github.event.release.prerelease }} "
        echo "    url       :  ${{ github.event.release.url }} "
        echo ""
        echo "finishing the 'verbose-github-context' step... "
        ##
        echo "::endgroup::"

    - name: Checkout files from commit tree
      # Verified creator: https://github.com/marketplace/actions/checkout
      # GitHub Action for checking out a repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      id: checkout-without-token
      if: inputs.checkout=='true'
      continue-on-error: true
      with:
        fetch-depth: 0

    - name: Checkout files from commit tree with the token
      # Verified creator: https://github.com/marketplace/actions/checkout
      # GitHub Action for checking out a repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      id: checkout-with-token
      if: steps.checkout-without-token.outcome == 'failure'
      with:
        fetch-depth: 0
        token: ${{ inputs.gh-token }}

    - name: Extra | The ref_type is 'tag'
      id: extra-ref-type-tag
      if: github.ref_type == 'tag'
      shell: bash
      run: |
        echo "::group::starting the 'extra-ref-type-tag' step... "
        echo "The ref_type is 'tag' "
        ##echo ""
        echo "    ref     :  ${{ github.ref }} "
        echo "    ref_name:  ${{ github.ref_name }} "
        echo "    ref_type:  ${{ github.ref_type }} "
        echo ""
        echo "The release information is: "
        echo "    release.tag_name:  ${{ github.event.release.tag_name }}"
        echo ""
        echo "finishing the 'extra-ref-type-tag' step... "
        ##
        echo "::endgroup::"

    - name: Extra | The tag starts with the proper version numbering syntax
      id: extra-tag-with-version-syntax
      if: github.ref_type == 'tag' && startsWith('refs/tags/v[0-9].[0-9].[0-9]', github.ref)
      # the filter pattern will need to be updated to allow double digits, using either: 
      #    specify 2 digits with a second range followed by `?`:
      #        'v[0-9][0-9]?.[0-9][0-9]?.[0-9][0-9]?'     
      #    or keep the single digit, but match one or more with `+`:
      #        'v[0-9]+.[0-9]+.[0-9]+'
      # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
      shell: bash
      run: |
        echo "::group::starting the 'extra-tag-with-version-syntax' step... "
        echo "The ref_type is 'tag' and the tag starts with the proper version numbering syntax "
        ##echo ""
        echo "    ref     :  ${{ github.ref }} "
        echo "    ref_name:  ${{ github.ref_name }} "
        echo "    ref_type:  ${{ github.ref_type }} "
        echo ""
        echo "The release information is: "
        echo "    release.tag_name:  ${{ github.event.release.tag_name }}"
        echo ""
        echo "finishing the 'extra-tag-with-version-syntax' step... "
        ##
        echo "::endgroup::"

    - name: Set environmental variables used to evaluate the build skip-create
      id: set-eval-skip-create-env-vars
      # Ensure that the needed environmental variables are set
      #   - 'EVAL_BUILD_SKIP_CREATE' is set to 'false'
      #   - 'GH_DEFAULT_BRANCH' is set to '${{ github.event.repository.default_branch }}'
      if: ${{ always() }}
      shell: bash
      run: |
        echo "::group::Setting EVAL_BUILD_SKIP_CREATE to false..."
        echo "EVAL_BUILD_SKIP_CREATE=false" >> $GITHUB_ENV
        echo "Setting GH_DEFAULT_BRANCH to '${{ github.event.repository.default_branch }}'..."
        echo "GH_DEFAULT_BRANCH=${{ github.event.repository.default_branch }}" >> $GITHUB_ENV
        echo ""
        echo "finishing the 'set-eval-skip-create-env-vars' step... "
        echo "::endgroup::"

    - name: Set environmental variables used to evaluate the build skip-create
      id: set-eval-skip-create-env-vars
      # Ensure that the needed environmental variables are set
      #   - 'EVAL_BUILD_SKIP_CREATE' is set to 'false'
      #   - 'GH_DEFAULT_BRANCH' is set to '${{ github.event.repository.default_branch }}'
      if: ${{ always() }}
      shell: bash
      run: |
        echo "step id: 'set-eval-skip-create-env-vars' "
        echo ""
        echo "Setting EVAL_BUILD_SKIP_CREATE to false..."
        echo "EVAL_BUILD_SKIP_CREATE=false" >> $GITHUB_ENV
        echo "Setting GH_DEFAULT_BRANCH to '${{ github.event.repository.default_branch }}'..."
        echo "GH_DEFAULT_BRANCH=${{ github.event.repository.default_branch }}" >> $GITHUB_ENV
        echo ""
        echo "EVAL_BUILD_SKIP_CREATE is    : ${{ env.EVAL_BUILD_SKIP_CREATE }} "
        echo "Build skip-create (input)    : ${{ inputs.BUILD_SKIP_CREATE }} "
        echo "The GitHub event_name is: ${{ github.event_name }}"
        echo "The GitHub ref is       : ${{ github.ref }}"
        echo "The GitHub ref_name is  : ${{ github.ref_name }}"
        echo "The GitHub ref_type is  : ${{ github.ref_type }}"
        echo ""
