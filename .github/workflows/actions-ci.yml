# attempt to adhere to a commit convention - https://commitlint.js.org/
# from https://commitlint.js.org/guides/ci-setup.html#github-actions
# This file is sourced from the 'infra' repo, the file location is: 'infra/assets/gh_workflows/actions-ci.yml'
name: Commit manager
run-name: Check commit conventions on ${{ github.event_name }}

on:
  push:
    tags:
      - '!v*.*.*'
      - '!v*.*'
      - '!v*'
  pull_request:

env:
  # the owner of the repo, used in conditionals below
  GH_OWNER: rwaight

jobs:
  commitlint:
    runs-on: ubuntu-22.04
    if: (github.repository_owner == 'rwaight')
    permissions:
      contents: write
      pull-requests: write
    steps:

      - name: Exit workflow in forked repo
        id: check-repo-owner
        if: ${{ github.repository_owner != env.GH_OWNER }}
        # https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#setting-an-error-message
        run: |
          echo "This workflow was run in a forked repo. Unless this file is updated, none of the jobs will run. "
          echo "This workflow will now fail and exit. "
          echo "::error title=â›” error in the '${{ github.workflow }}' workflow hint::This workflow was run in a forked repo"
          exit 1

      - name: Checkout files from commit tree
        # Verified creator: https://github.com/marketplace/actions/checkout
        # GitHub Action for checking out a repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Setup Node.js environment
        # Verified creator: https://github.com/marketplace/actions/setup-node-js-environment
        # Set up your GitHub Actions workflow with a specific version of node.js
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6 # v4.0.4

      # https://commitlint.js.org/guides/getting-started.html
      - name: Install commitlint
        id: install-commitlint
        run: |
          echo "starting commitlint installation. "
          npm install conventional-changelog-conventionalcommits
          npm install commitlint@latest
          npm install --save-dev @commitlint/{cli,config-conventional}
          echo "commitlint has been installed"
        # old commands to create the default commitlint configuration
          # echo "creating 'commitlint.config.js' to use the conventional configuration. "
          # echo "module.exports = { extends: ['@commitlint/config-conventional'] };" > commitlint.config.js
          # echo "the 'commitlint.config.js' file has been created. "

      # # https://commitlint.js.org/guides/getting-started.html
      # - name: Configure commitlint
      #   id: configure-commitlint
      #   run: |
      #     echo "starting commitlint configuration. "
      #     echo "copying 'commitlint.config.js' from the 'assets/' directory. "
      #     cp assets/commitlint.config.js commitlint.config.js
      #     echo "the 'commitlint.config.js' configuration has been copied to the current working directory. "

      # https://commitlint.js.org/guides/local-setup.html
      - name: Install husky
        id: install-husky
        run: |
          echo "installing husky"
          npm install husky --save-dev
          echo "initialize husky"
          npx husky init
          echo "husky has been initialized"
          echo "adding commit message linting to commit-msg hook"
          echo "npx --no -- commitlint --edit \$1" > .husky/commit-msg
          echo "the 'install husky' step is now complete "

      # https://commitlint.js.org/guides/ci-setup.html#github-actions
      - name: Print versions
        run: |
          echo "::group::display file contents of current directory"
          ls -la
          echo "look for the 'commitlint.config.js' file in the output above"
          echo "::endgroup::"
          git --version
          node --version
          npm --version
          npx commitlint --version

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: npx commitlint --last --verbose
        # note for future reference: take a look at 
        # https://github.com/agilepathway/label-checker/blob/master/.github/workflows/check-commit-message-push.yml

      - name: Validate PR commits with commitlint
        #if: github.event_name == 'pull_request'
        if: |
          github.event_name == 'pull_request' && (github.actor!= 'dependabot[bot]') &&
          (contains(github.head_ref, 'dependabot-') == false) 
        run: npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose
        # note for future reference: take a look at 
        # https://github.com/agilepathway/label-checker/blob/master/.github/workflows/check-commit-message-pr.yml


  # Run the 'not-repo-owner' job if the repository_owner is not correct
  not-repo-owner:
    #name: Exit on forked repo
    runs-on: ubuntu-latest
    if: (github.repository_owner != 'rwaight')
    env:
      MY_WORKFLOW_DEBUG: ${{ inputs.debug_output || 'false' }}
    steps:
      - name: Print a message based on a condition
        id: print-message
        run: |
          echo "This workflow was run in a forked repo. Unless this file is updated, none of the jobs will run. "
          echo ""
