# not using this workflow since the 'actions-release-manager' workflow updates the tags when a release is published


# from https://github.com/release-flow/keep-a-changelog-action/blob/v3.0.0/.github/workflows/release-published.yml
name: '[autorelease] Release published'
run-name: '[autorelease] Release published'

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  update-ref:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout files from commit tree
      # Verified creator: https://github.com/marketplace/actions/checkout
      # GitHub Action for checking out a repo
      #uses: actions/checkout@1d96c772d19495a3b5c517cd2bc0cb401ea0529f
      uses: actions/checkout@v4.1.3
      with:
        fetch-depth: 0

    - name: Get release version
      id: get-release-version
      run: |
        VERSION="${{ github.event.release.tag_name }}"

        RE='^[vV]?([0-9]+)[.]([0-9]+)[.]([0-9]+)(-[0-9A-Za-z.+-]*)?'
        if [[ $VERSION =~ $RE ]]; then
          MAJOR="${BASH_REMATCH[1]}"
          MINOR="${BASH_REMATCH[2]}"
          PATCH="${BASH_REMATCH[3]}"
          PRERELEASE="${BASH_REMATCH[4]}"
        else
          echo "::error::Version '$VERSION' is not in a valid format" && exit 1
        fi

        if [[ "$PRERELEASE" ]]; then pre=true; else pre=false; fi
        if [[ -f $GITHUB_OUTPUT ]]; then
          echo "major-ref=v$MAJOR" >> $GITHUB_OUTPUT
          echo "minor-ref=v$MINOR" >> $GITHUB_OUTPUT
          echo "is-prerelease=$pre" >> $GITHUB_OUTPUT
        else
          echo "::set-output name=major-ref::v$MAJOR"
          echo "::set-output name=minor-ref::v$MINOR"
          echo "::set-output name=is-prerelease::$pre"
        fi

    - name: Prerelease
      if: fromJSON(steps.get-release-version.outputs.is-prerelease)
      run: |
        echo "::notice::Pre-release version detected, not moving ref  ${{ steps.get-release-version.outputs.major-ref }}"

    - name: Update release tag
      if: ${{ ! fromJSON(steps.get-release-version.outputs.is-prerelease) }}
      run: |        
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

        git tag -fa ${{ steps.get-release-version.outputs.major-ref }} -m "Update ${{ steps.get-release-version.outputs.major-ref }} tag"
        git push origin ${{ steps.get-release-version.outputs.major-ref }} --force
        echo "::notice::Updated ref ${{ steps.get-release-version.outputs.major-ref }}"
