# This workflow runs the 'Export label config' and 'Sync labels' actions and includes user input
name: Infra Labels
run-name: Dispatch Label Manager from ${{ github.event_name }}
on: 
  workflow_call:
    inputs:
      export_labels:
        description: 'Export labels from repo'
        required: true
        default: true
        type: boolean
      sync_labels:
        description: 'Sync labels from config files'
        required: true
        default: false
        type: boolean
      debug_output:
        description: 'Debug output'
        required: true
        default: false
        type: boolean
  workflow_dispatch:
    inputs:
      export_labels:
        description: 'Export labels from repo'
        required: true
        default: true
        type: boolean
      sync_labels:
        description: 'Sync labels from config files'
        required: true
        default: false
        type: boolean
      debug_output:
        description: 'Debug output'
        required: true
        default: false
        type: boolean
  schedule:
    - cron: '0 10 1 */6 *'  # once every six months, at 10:00 on the first of the month

jobs:
  dispatch-label-manager:
    name: Run label manager on ${{ github.repository_owner }}/${{ matrix.repo }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: 
          - 'actions'
          - 'test-actions'
          - 'rwaight.github.io'
          #- 'hosts'
          #- 'WindowsAutomation'
          #- 'actions-run-markserv'
    timeout-minutes: 5
    permissions:
      #actions: write
      contents: write
    if: | 
      (github.event_name=='schedule' && github.event.schedule=='0 10 1 */6 *') || 
      (github.event_name=='workflow_call' && inputs.export_labels==true) || 
      (github.event_name=='workflow_call' && inputs.sync_labels==true) ||
      (github.event_name=='workflow_dispatch' && inputs.export_labels==true) || 
      (github.event_name=='workflow_dispatch' && inputs.sync_labels==true)
    env:
      MY_WORKFLOW_DEBUG: ${{ inputs.debug_output || 'false' }}
      #DISPATCH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #EVENT: export-labels
      OWNER: ${{ github.repository_owner }}
      REPO: ${{ matrix.repo }}
    steps:
      - name: Exit workflow in forked repo
        id: check-repo-owner
        if: (github.repository_owner != 'rwaight')
        run: |
          echo "This workflow was run in a forked repo. Unless this file is updated, none of the jobs will run. "
          echo "This workflow will now exit. "
          exit 0

      # Create a GitHub App Token from actions/create-github-app-token
      # https://github.com/actions/create-github-app-token
      - name: Create an App Token for ${{ matrix.repo }}
        # Verified creator: https://github.com/marketplace/actions/create-github-app-token
        # GitHub Action for creating a GitHub App installation access token.
        uses: actions/create-github-app-token@a0de6af83968303c8c955486bf9739a57d23c7f1 # v1.10.0
        #uses: actions/create-github-app-token@v1.10.0
        id: app-token
        with:
          # required
          app-id: ${{ secrets.RW_ACTIONS_APP_ID }}
          private-key: ${{ secrets.RW_ACTIONS_APP_KEY }}
          # create a token for all repositories in the current owner's installation
          owner: ${{ github.repository_owner }}
          repositories: "${{ matrix.repo }}"

      - name: Configure Git Credentials if using the app token
        id: configure-git
        if: ${{ steps.app-token.outputs.token }}
        run: |
          ##
          ## Configure git to login as the RW Actions Bot.
          git config user.name rw-actions-bot[bot]
          git config user.email ${{ secrets.RW_ACTIONS_BOT_UID }}+rw-actions-bot[bot]@users.noreply.github.com

      - name: Send 'export-labels' dispatch to ${{ env.OWNER }}/${{ env.REPO }}
        id: call-export-labels
        if: |
          (github.event_name=='schedule' && github.event.schedule=='0 10 1 */6 *') || 
          (github.event_name=='workflow_call' && inputs.sync_labels==false) || 
          (github.event_name=='workflow_dispatch' && inputs.sync_labels==false)
        uses: rwaight/actions/github/repository-dispatch@bd2234d2665c0db7fff5b9b65e904bf58b63bd11 # v0.1.31
        #uses: rwaight/actions/github/repository-dispatch@v0.1.26
        #uses: rwaight/actions/github/repository-dispatch@main
        with:
          token: ${{ steps.app-token.outputs.token }}
          # the 'REPO' variable is defined in the 'ENV' above #repository: ${{ env.OWNER }}/${{ matrix.repo }}
          repository: ${{ env.OWNER }}/${{ env.REPO }}
          event-type: export-labels

      - name: Send 'sync-labels' dispatch to ${{ env.OWNER }}/${{ env.REPO }}
        if: |
          (github.event_name=='workflow_call' && inputs.sync_labels==true) ||
          (github.event_name=='workflow_dispatch' && inputs.sync_labels==true)
        id: call-sync-labels
        uses: rwaight/actions/github/repository-dispatch@bd2234d2665c0db7fff5b9b65e904bf58b63bd11 # v0.1.31
        #uses: rwaight/actions/github/repository-dispatch@v0.1.26
        #uses: rwaight/actions/github/repository-dispatch@main
        with:
          token: ${{ steps.app-token.outputs.token }}
          # the 'REPO' variable is defined in the 'ENV' above #repository: ${{ env.OWNER }}/${{ matrix.repo }}
          repository: ${{ env.OWNER }}/${{ env.REPO }}
          event-type: sync-labels

      # - name: Send dispatch to ${{ matrix.repo }}
      #   continue-on-error: true
      #   id: call-export-labels-2
      #   run: |
      #     curl -d "{\"event_type\": \"${{ env.EVENT }}\"}" -H "Content-Type: application/json" \
      #     -H "Authorization: token ${{ steps.app-token.outputs.token }}" \ 
      #     -H "Accept: application/vnd.github.everest-preview+json" "https://api.github.com/repos/${{ env.OWNER }}/${{ env.REPO }}/dispatches"

      - name: Debug | Output the runner environment and GitHub context
        #if: env.MY_WORKFLOW_DEBUG=='true'
        run: | 
          echo "::group::Runner Environment"
          echo "## Runner Environment"
          env | sort
          echo "\n"
          echo "::endgroup::"
          echo ""
          echo "::group::GitHub context"
          echo "## GitHub context"
          echo "$GITHUB_CONTEXT"
          echo "\n"
          echo "::endgroup::"
          echo ""
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}


  # # Run sync-label after export-labels, but only when the user sets 'sync_labels' to true
  # dispatch-sync-labels:
  #   name: Dispatch sync labels on ${{ matrix.repo }}
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       repo: 
  #         #- 'actions'
  #         - 'test-actions'
  #         - 'rwaight.github.io'
  #         #- 'hosts'
  #         #- 'WindowsAutomation'
  #         #- 'actions-run-markserv'
  #       # add 'types' to dispatch test 2 above
  #       #types: [export-labels,sync-labels]
  #   timeout-minutes: 5
  #   permissions:
  #     #actions: write
  #     contents: write
  #   if: | 
  #     (github.event_name=='workflow_dispatch' && inputs.sync_labels==true)
  #   needs: [dispatch-export-labels]
  #   env:
  #     MY_WORKFLOW_DEBUG: ${{ inputs.debug_output || 'false' }}
  #     #DISPATCH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #     EVENT: sync-labels
  #     OWNER: ${{ github.repository_owner }}
  #     REPO: ${{ matrix.repo }}
  #   steps:
  #     - name: Exit workflow in forked repo
  #       id: check-repo-owner
  #       if: (github.repository_owner != 'rwaight')
  #       run: |
  #         echo "This workflow was run in a forked repo. Unless this file is updated, none of the jobs will run. "
  #         echo "This workflow will now exit. "
  #         exit 0

  #     - name: print notice about combining this with the above job
  #       run: |
  #         echo "::notice::The 'sync-labels' event could be added to the dispatch 'type' as a matrix item..."

  #     # https://github.com/actions/create-github-app-token
  #     - name: Creating a GitHub App Token from actions/create-github-app-token
  #       # Verified creator: https://github.com/marketplace/actions/create-github-app-token
  #       # GitHub Action for creating a GitHub App installation access token.
  #       #uses: actions/create-github-app-token@a0de6af83968303c8c955486bf9739a57d23c7f1
  #       uses: actions/create-github-app-token@v1.10.0
  #       id: app-token
  #       with:
  #         # required
  #         app-id: ${{ secrets.RW_ACTIONS_APP_ID }}
  #         private-key: ${{ secrets.RW_ACTIONS_APP_KEY }}
  #         # create a token for all repositories in the current owner's installation
  #         owner: ${{ github.repository_owner }}

  #     - name: Print note about adding the dispatch 'type' to the matrix
  #       #if: (github.event_name=='workflow_dispatch' && inputs.sync_labels==true)
  #       id: print-note
  #       run: |
  #         echo "::notice::The 'sync-labels' event could be added to the dispatch 'type' as a matrix item..."

  #     - name: Send '${{ env.EVENT }}' dispatch to ${{ matrix.repo }}
  #       #if: (github.event_name=='workflow_dispatch' && inputs.sync_labels==true)
  #       id: call-sync-labels
  #       #uses: rwaight/actions/github/repository-dispatch@bd2234d2665c0db7fff5b9b65e904bf58b63bd11
  #       #uses: rwaight/actions/github/repository-dispatch@v0.1.31
  #       uses: rwaight/actions/github/repository-dispatch@main
  #       with:
  #         token: ${{ steps.app-token.outputs.token }}
  #         # the 'REPO' variable is defined in the 'ENV' above #repository: ${{ env.OWNER }}/${{ matrix.repo }}
  #         repository: ${{ env.OWNER }}/${{ env.REPO }}
  #         event-type: ${{ env.EVENT }}

  #     # - name: Send dispatch to ${{ matrix.repo }}
  #     #   #if: (github.event_name=='workflow_dispatch' && inputs.sync_labels==true)
  #     #   id: call-sync-labels
  #     #   continue-on-error: true
  #     #   run: |
  #     #     echo "::notice::The 'sync-labels' event could be added to the dispatch 'type' as a matrix item..."
  #     #     echo "attempting to run the curl command"
  #     #     curl -d "{\"event_type\": \"${{ env.EVENT }}\"}" -H "Content-Type: application/json" \
  #     #     -H "Authorization: token ${{ steps.app-token.outputs.token }}" \ 
  #     #     -H "Accept: application/vnd.github.everest-preview+json" "https://api.github.com/repos/${{ env.OWNER }}/${{ env.REPO }}/dispatches"

  #     - name: Debug | Output the runner environment and GitHub context
  #       #if: env.MY_WORKFLOW_DEBUG=='true'
  #       run: | 
  #         echo "::group::Runner Environment"
  #         echo "## Runner Environment"
  #         env | sort
  #         echo "\n"
  #         echo "::endgroup::"
  #         echo ""
  #         echo "::group::GitHub context"
  #         echo "## GitHub context"
  #         echo "$GITHUB_CONTEXT"
  #         echo "\n"
  #         echo "::endgroup::"
  #         echo ""
  #       env:
  #         GITHUB_CONTEXT: ${{ toJson(github) }}
