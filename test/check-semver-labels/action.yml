name: 'Check semver labels'
description: 'Check a pull request for semver labels using the label-checker action'
author: 'rwaight'
branding:
  icon: 'check-square'
  color: 'blue'
  # Ref: https://haya14busa.github.io/github-action-brandings/
  # fork: https://github.com/rwaight/github-action-brandings

inputs:
  gh-token:
    description: >
      GITHUB_TOKEN or a repo scoped Personal Access Token (PAT), may be needed for the GitHub CLI.
      See this link for an example of how to set this token:
      https://help.github.com/en/actions/configuring-and-managing-workflows/authenticating-with-the-github_token#example-passing-github_token-as-an-input
    required: true
    default: ${{ github.token }}
  allow-failure:
    description: 'The allow_failure input for the label-checker action'
    required: false
    default: ''
  semver-fallback:
    description: 'A fallback label to add/remove to the pull request if the proper version label is missing, defaults to triage:version-needed'
    required: false
    default: 'triage:version-needed'
  semver-prefix:
    description: 'The prefix for the semver labels used in the repo'
    required: false
    default: 'version:'
  # one_of:
  #   description: 'The one_of input for the label-checker action'
  #   required: false
  #   default: ''
  # none_of:
  #   description: 'The none_of input for the label-checker action'
  #   required: false
  #   default: ''
  # all_of:
  #   description: 'The all_of input for the label-checker action'
  #   required: false
  #   default: ''
  # any_of:
  #   description: 'The any_of input for the label-checker action'
  #   required: false
  #   default: ''
  # github_enterprise_graphql_url:
  #   description: >
  #     Only provide this if you are using GitHub Enterprise.
  #     For GitHub Enterprise Cloud enter `https://api.github.com/graphql` as the value.
  #     For Github Enterprise Server enter `http(s)://<hostname>/api/graphql` as the value.
  #   required: false
  #   default: ''
  # prefix_mode:
  #   description: 'The prefix_mode input for the label-checker action, defaults to true'
  #   required: false
  #   default: 'true'
  my_action_debug:
    description: 'Determine if the workflow should run debug tasks, defaults to false'
    required: false
    default: 'false'

outputs:
  semver-check-results:
    description: "The output from the 'semver-labels-check' step. "
    value: ${{ steps.semver-labels-check.outputs.label_check }}
  fallback-check-results:
    description: "The output from the 'fallback-label-check' step. "
    value: ${{ steps.fallback-label-check.outputs.label_check }}

runs:
  using: "composite"
  # Ref: https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
  steps:
    - name: Validate that the runner OS is Linux
      if: ${{ runner.os != 'Linux' }}
      shell: bash
      run: |
        echo "::error title=â›” error hint::This action supports Linux only"
        exit 1

    - name: Greet the triggering_actor
      if: inputs.my_action_debug=='true'
      shell: bash
      run: echo Hello ${{ github.triggering_actor }}, the my_action_debug variable is set to true.

    - name: Debug | Print the inputs
      if: inputs.my_action_debug=='true'
      id: debug-print-inputs
      shell: bash
      run: | 
        ## Print the inputs if inputs.my_action_debug=='true'
        ## the double number signs below are for line spacing and readability only
        ##
        echo "starting the 'debug-print-inputs' step. "
        echo ""
        ##echo "one_of is     :  ${{ inputs.one_of }} "
        ##echo "none_of is    :  ${{ inputs.none_of }} "
        ##echo "all_of is     :  ${{ inputs.all_of }} "
        ##echo "any_of is     :  ${{ inputs.any_of }} "
        ##echo "prefix_mode is:  ${{ inputs.prefix_mode }} "
        echo "allow-failure is  :  ${{ inputs.allow-failure }} "
        echo "semver-prefix is  :  ${{ inputs.semver-prefix }} "
        echo "semver-fallback is:  ${{ inputs.semver-fallback }} "
        echo "my_action_debug is:  ${{ inputs.my_action_debug }} "
        echo ""
        ##
        echo "completing the 'debug-print-inputs' step. "

    # We may want to assume the declared 'fallback' label already exists in the repo
    - name: Ensure the ${{ inputs.semver-fallback }} label exists
      id: ensure-alternate-label-exists
      shell: bash
      run: |
        if [ '${{ inputs.my_action_debug }}' == 'true' ]; then
            echo "starting the 'ensure-alternate-label-exists' step. "
            echo "  the value of 'semver-fallback' is '${{ env.semver-fallback }}'. "
            ## delete before publishing ##echo ""
            ## delete before publishing ##echo "  checking the auth status using 'gh auth status' "
            ## delete before publishing ##echo "    if authentication fails, read through the documentation "
            ## delete before publishing ##echo "    link to docs: https://cli.github.com/manual/gh_auth_status "
            ## delete before publishing ##gh auth status
            ## delete before publishing ##echo "    review the output from the auth status command above"
        fi
        ##
        ## delete before publishing ##echo "first-debug-output-complete"
        if [ '${{ inputs.my_action_debug }}' == 'true' ]; then
            ## delete before publishing ## #echo "  running 'gh label list' with the '--json name' and --jq '.name' options "
            ## delete before publishing ## #gh label list --search "${{ env.semver-fallback }}" --limit 1 --json name --jq '.name'
            ## delete before publishing ## #echo "  running 'gh label list' with the '--json name' option -- setting the output as gh_label_1_result "
            ## delete before publishing ## #gh_label_1_result=$(gh label list --search "${{ env.semver-fallback }}" --limit 1 --json name --jq '.name')
            ## delete before publishing ## #echo "    gh_label_1_result was set to '${gh_label_1_result}' . "
            echo ""
            echo "  running 'gh label list' with the '--jq' option "
            gh label list --search "${{ env.semver-fallback }}" --limit 1 --json name --jq '.[].name'
            echo "  running 'gh label list' with the '--jq' option -- setting the output as gh_label_2_result "
            gh_label_2_result=$(gh label list --search "${{ env.semver-fallback }}" --limit 1 --json name --jq '.[].name')
            echo "    gh_label_2_result was set to '${gh_label_2_result}' . "
            echo "  check the results of the outputs above"
        fi
        ##
        echo "second-debug-output-complete"
        ## delete before publishing ## #LABEL=$(gh api repos/$GITHUB_REPOSITORY/labels --jq '.[] | select(.name=="${{ env.semver-fallback }}")')
        LABEL=$(gh label list --search "${{ env.semver-fallback }}" --limit 1 --json name --jq '.[].name')
        if [ '${{ inputs.my_action_debug }}' == 'true' ]; then
            echo "  the value of LABEL is '${LABEL}', going to test the conditional. "
        fi
        ##
        if [[ -z "$LABEL" ]]; then
          echo "Creating '${{ env.semver-fallback }}' label"
          ## delete before publishing ## #gh api --silent repos/$GITHUB_REPOSITORY/labels -f name="${{ env.semver-fallback }}" -f color="baa938" -f description="Need to have the version determined"
          gh label create "${{ env.semver-fallback }}" --description "Need to have the version determined" --color BAA938
        else
          echo "  'ensure-alternate-label-exists' - the '${{ env.semver-fallback }}' label exists"
        fi
        ##
        if [ '${{ inputs.my_action_debug }}' == 'true' ]; then echo "completing the 'ensure-alternate-label-exists' step. "; fi
      env:
        #GITHUB_TOKEN: ${{ inputs.gh-token }}
        GH_TOKEN: ${{ inputs.gh-token }}
        semver-fallback: ${{ inputs.semver-fallback }}

    - name: Check for semantic version labels
      uses: rwaight/actions/github/label-checker@main # can use version specific or main
      #uses: rwaight/actions/github/label-checker@v1
      id: semver-labels-check
      with:
        prefix_mode: true
        one_of: ${{ inputs.semver-prefix }}
        #none_of: "skip-changelog"
        allow_failure: ${{ inputs.allow-failure }}
        repo_token: ${{ inputs.gh-token }}

    - name: Debug | Print the output from 'semver-labels-check'
      if: inputs.my_action_debug=='true'
      id: debug-semver-labels-check
      shell: bash
      run: | 
        ## Print the output from 'semver-labels-check' if inputs.my_action_debug=='true'
        ## the double number signs below are for line spacing and readability only
        ##
        echo "starting the 'debug-semver-labels-check' step. "
        echo ""
        echo "  The output from the 'semver-labels-check' step is below: "
        echo "    ${{ steps.semver-labels-check.outputs.label_check }} "
        echo "    Check the output above. "
        ##
        echo "completing the 'debug-semver-labels-check' step. "

    - name: Check for the fallback label
      uses: rwaight/actions/github/label-checker@main # can use version specific or main
      #uses: rwaight/actions/github/label-checker@v1
      id: fallback-label-check
      with:
        prefix_mode: false
        one_of: ${{ inputs.semver-fallback }}
        allow_failure: ${{ inputs.allow-failure }}
        repo_token: ${{ inputs.gh-token }}

    - name: Debug | Print the output from 'fallback-label-check'
      if: inputs.my_action_debug=='true'
      id: debug-fallback-label-check
      shell: bash
      run: | 
        ## Print the output from 'fallback-label-check' if inputs.my_action_debug=='true'
        ## the double number signs below are for line spacing and readability only
        ##
        echo "starting the 'debug-fallback-label-check' step. "
        echo ""
        echo "  The output from the 'fallback-label-check' step is below: "
        echo "    ${{ steps.fallback-label-check.outputs.label_check }} "
        echo "    Check the output above. "
        ##
        echo "completing the 'debug-fallback-label-check' step. "

    - name: Apply the '${{ inputs.semver-fallback }}' label
      # the semver label did not exist AND the fallback label did not exist
      uses: actions/github-script@v6
      if: |
        steps.semver-labels-check.outputs.label_check != 'success' &&
        steps.fallback-label-check.outputs.label_check != 'success'
      with:
        github-token: ${{ inputs.gh-token }}
        script: |
          github.rest.issues.addLabels({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['${{ inputs.semver-fallback }}']
          })

    - name: Remove the '${{ inputs.semver-fallback }}' label
      # the semver label did exist and the fallback label did exist
      uses: actions/github-script@v6
      continue-on-error: true
      if: |
        steps.semver-labels-check.outputs.label_check == 'success' &&
        steps.fallback-label-check.outputs.label_check == 'success'
      with:
        github-token: ${{ inputs.gh-token }}
        script: |
          github.rest.issues.removeLabel({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: '${{ inputs.semver-fallback }}'
          })

    - name: Error - Missing proper '${{ inputs.semver-prefix }}' label
      # Fail the workflow because the proper version label has not been applied
      id: labeler-force-failure
      if: | 
        steps.semver-labels-check.outputs.label_check != 'success' && 
        inputs.allow-failure=='true'
      shell: bash
      run: |
        echo "Running 'semver-labels-check' failed! The outcome was ${{ steps.semver-labels-check.outputs.label_check }} ."
        echo ""
        echo "::group::semver-labels-check information"
        echo "The pull request must have one of the '${{ inputs.semver-prefix }}' labels applied. "
        echo "::endgroup::"
        ##
        echo "::error file=action.yml,title=Check semver labels::semver-labels-check error"
        exit 1

    - name: Debug | Action complete
      if: inputs.my_action_debug=='true'
      id: debug-action-complete
      shell: bash
      run: | 
        ## Print a notice that the action has finished
        ## the double number signs below are for line spacing and readability only
        ##
        echo "starting the 'debug-action-complete' step. "
        echo ""
        echo "  The 'Check semver labels' action is on the last step. "
        echo ""
        echo "  The output from the 'semver-labels-check' step is: "
        echo "    ${{ steps.semver-labels-check.outputs.label_check }} "
        echo ""
        echo "  The output from the 'fallback-label-check' step is: "
        echo "    ${{ steps.fallback-label-check.outputs.label_check }} "
        echo "    Check the output above. "
        ##
        echo "completing the 'debug-action-complete' step. "
